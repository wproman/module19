// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



 
  
 model User {
  id           Int       @id @default(autoincrement())
  firstName    String    @db.VarChar(100)
  middleName   String?   @db.VarChar(100)
  lastName     String    @db.VarChar(100)
  mobile       String?   @db.VarChar(100)
  email        String    @unique
  password     String
  isAdmin      Boolean   @default(false)
  registeredAt DateTime  @default(now())
  lastLogin    DateTime  @default(now())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())
  carts        Cart[]
  orders       Order[]
  products     Product[]
}

model Product {
  id           Int       @id @default(autoincrement())
  name         String    @db.VarChar(100)
  metaTitle    String?   @db.VarChar(100)
  slug         String?   @unique
  summary      String?   @db.VarChar(255)
  price        Int
  discount     Int       @default(0)
  userId       Int
  publishedAt  DateTime  @default(now())
  startsAt     DateTime  @default(now())
  endsAt       DateTime  @default(now())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())
  user         User      @relation(fields: [userId], references: [id])
  metadata     ProductMeta[]
  reviews      ProductReview[]
}

model ProductMeta {
  id        Int       @id @default(autoincrement())
  key       String    @db.VarChar(100)
  content   String    @db.VarChar(255)
  productId  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  product   Product   @relation(fields: [productId], references: [id])
}

model ProductReview {
  id        Int       @id @default(autoincrement())
  title     String    @db.VarChar(100)
  rating    Int
  content   String?   @db.VarChar(255)
  productId  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  product   Product   @relation(fields: [productId], references: [id])
}

model Category {
  id         Int       @id @default(autoincrement())
  title      String    @db.VarChar(100)
  metaTitle  String?   @db.VarChar(100)
  slug       String?   @unique
  content    String?   @db.VarChar(255)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now())
}

model Cart {
  id        Int       @id @default(autoincrement())
  title     String?   @db.VarChar(50)
  sessionId String?   @unique
  token     String?   @unique
  status    String?   @db.VarChar(50)
  userId    Int?
  firstName  String? @db.VarChar(100)
  middleName String? @db.VarChar(100)
  lastName   String? @db.VarChar(100)
  mobile     String? @db.VarChar(100)
  email      String? @db.VarChar(100)
  city       String? @db.VarChar(100)
  country    String? @db.VarChar(100)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  user      User?     @relation(fields: [userId], references: [id])
}

model Order {
  id         Int      @id @default(autoincrement())
  title      String?  @db.VarChar(50)
  token      String?  @unique
  subTotal   Int
  itemDiscount Int   @default(0)
  tax        Int     @default(0)
  total      Int
  discount   Int     @default(0)
  grandTotal Int
  userId     Int
  firstName  String? @db.VarChar(100)
  middleName String? @db.VarChar(100)
  lastName   String? @db.VarChar(100)
  mobile     String? @db.VarChar(100)
  email      String? @db.VarChar(100)
  city       String? @db.VarChar(100)
  country    String? @db.VarChar(100)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}
